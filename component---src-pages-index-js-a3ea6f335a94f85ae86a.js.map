{"version":3,"sources":["webpack:///./src/hooks/use-site-metadata.js","webpack:///./src/components/shared/index.js","webpack:///./src/components/hero.js","webpack:///./src/components/about.js","webpack:///./src/components/talks.js","webpack:///./src/hooks/use-talks.js","webpack:///./src/components/writings.js","webpack:///./src/pages/index.js","webpack:///./src/components/icons.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/styles/theme.js","webpack:///./src/styles/global.js","webpack:///./src/templates/page.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js"],"names":["useSiteMetadata","site","siteMetadata","Presentation","styled","h1","props","theme","colors","fonts","Box","div","TitleSection","h2","lines","Paragraph","p","ProfileImage","figure","SwitchTheme","button","withGrid","Fragment","className","author","jobTitle","href","currentCompany","website","rel","target","label","id","image","title","bio","src","alt","dangerouslySetInnerHTML","__html","summary","talks","myDataNodes","when","length","map","link","pubDate","key","seeAll","data","writings","formatWritings","allMarkdownRemark","edges","IndexPage","LogoIcon","width","height","viewBox","fill","xmlns","rx","x","y","d","Header","to","activeClassName","Footer","light","body","dark","GlobalStyle","createGlobalStyle","Layout","children","noHeader","useState","currentTheme","setLight","useEffect","savedTheme","localStorage","getItem","lightTheme","darkTheme","onClick","newTheme","setItem","defaultProps","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","url","this"],"mappings":"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","file":"component---src-pages-index-js-a3ea6f335a94f85ae86a.js","sourcesContent":["/**\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n*/\n\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SiteMetaData {\n        site {\n          siteMetadata {\n            name\n            jobTitle\n            location {\n              city\n              country\n              link\n            }\n            headline\n            currentCompany {\n              label\n              website\n            }\n            title\n            description\n            image\n            extraSocial {\n              linkedin\n              github\n              twitter\n              stackOverflow\n              codepen\n              codeSandBox\n              medium\n              lastFm\n              unsplash\n              wakatime\n            }\n            bio {\n              summary\n              experience\n              toolbox\n              longTerm\n            }\n            experience {\n              title\n              period\n              website\n            }\n            education {\n              title\n              period\n              field\n              website\n            }\n          }\n        }\n      }\n    `\n  )\n\n  return site.siteMetadata\n}\n","import styled from 'styled-components'\n\n// About Page\n\nexport const Presentation = styled.h1`\n  font-family: 'Roboto', sans-serif;\n  font-size: 30px;\n  margin-bottom: 40px;\n\n  color: ${props => props.theme.colors.fonts};\n  transition: color .25s linear;\n\n  @media (min-width: 768px) {\n    font-size: 70px;\n  }\n\n  a {\n    color: ${props => props.theme.colors.fonts};\n    text-decoration: underline;\n  }\n`;\n\nexport const Box = styled.div`\n  margin-bottom: 80px;\n`;\n\nexport const TitleSection = styled.h2`\n  color: ${props => props.theme.colors.fonts};\n  border-bottom: 1px solid ${props => props.theme.colors.lines};\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 100;\n  letter-spacing: 6px;\n\n  @media (min-width: 768px) {\n    font-size: 28px;\n  }\n`;\n\nexport const Paragraph = styled.p`\n  font-size: 20px;\n  font-weight: 100;\n  line-height: 34px;\n  font-family: 'Roboto', sans-serif;\n  color: ${props => props.theme.colors.fonts};\n\n  a {\n    color: ${props => props.theme.colors.fonts};\n    text-decoration: underline;\n    font-weight: 600;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n    line-height: 44px;\n  }\n`\n\nexport const ProfileImage = styled.figure`\n  img {\n    max-width: 100%;\n    transition: filter .25s linear 0s;\n\n    &:hover {\n      filter: grayscale(1);\n    }\n  }\n`\n\n// ====\n\n// Switch Theme Button\n\nexport const SwitchTheme = styled.button`\n  position: fixed;\n  top: 80px;\n  right: 0;\n  z-index: 20;\n  visibility: hidden; // should be visible when ready\n`","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport withGrid from './withGrid'\n\nconst Hero = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            jobTitle\n            author\n            currentCompany {\n              label\n              website\n            }\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <React.Fragment>\n      <h2>\n        Hi, I'm {``}\n\n        <div className=\"crossed\">\n          <span>Thulio Philipe</span>, a.k.a\n        </div> {``}\n\n        <span>{site.siteMetadata.author}</span>.\n      </h2>\n\n      <h4>\n        {site.siteMetadata.jobTitle} at {``}\n\n        <span>\n          <a\n            href={site.siteMetadata.currentCompany.website}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {site.siteMetadata.currentCompany.label}\n          </a>\n        </span>\n      </h4>\n    </React.Fragment>\n  )\n}\n\nexport default withGrid(Hero, {\n  id: 'hero'\n})","import React from 'react'\n\nimport withGrid from './withGrid'\nimport { useSiteMetadata } from '../hooks/use-site-metadata'\n\nconst About = () => {\n  const { image, title, bio } = useSiteMetadata()\n\n  return (\n    <React.Fragment>\n      <figure>\n        <img src={image} alt={title} />\n      </figure>\n\n      <p dangerouslySetInnerHTML={{ __html: bio.summary }} />\n\n      <a href=\"/about\">more about me</a>\n    </React.Fragment>\n  )\n}\n\nexport default withGrid(About, {\n  id: 'about'\n})","import React from 'react'\n\nimport withGrid from './withGrid'\nimport Loading from './loading'\nimport Link from './link'\nimport { useTalks } from '../hooks/use-talks'\n\nconst Talks = () => {\n  const { talks } = useTalks()\n\n  return (\n    <React.Fragment>\n      <Loading when={!talks || !talks.length}>\n        <ul className=\"talks-list\">\n          {talks && talks.map(({ id, link, title, pubDate }) => (\n            <Link key={id} href={link} title={title} pubDate={pubDate} />\n          ))}\n        </ul>\n      </Loading>\n    </React.Fragment>\n  )\n}\n\nexport default withGrid(Talks, {\n  id: 'talks',\n  title: 'Talks',\n  seeAll: 'https://speakerdeck.com/thulioph'\n})","/**\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n * Template for start a new hook\n */\n\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nexport const useTalks = () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        myDataNodes {\n          talks {\n            id\n            link\n            pubDate\n            title\n          }\n        }\n      }\n    `\n  )\n\n  return data.myDataNodes\n}","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport withGrid from './withGrid'\nimport Loading from './loading'\nimport Link from './link'\nimport { formatWritings } from '../formatters'\n\nconst Writings = () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] },\n          limit: 3\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 250)\n              id\n              frontmatter {\n                title\n                date(formatString: \"ll\")\n                path\n                lang\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const writings = formatWritings(data.allMarkdownRemark.edges)\n\n  return (\n    <React.Fragment>\n      <Loading when={!writings || !writings.length}>\n        <ul className=\"writings-list\">\n          {writings && writings.map(({ id, link, title, pubDate }) => (\n            <Link key={id} href={link} title={title} pubDate={pubDate} />\n          ))}\n        </ul>\n      </Loading>\n    </React.Fragment>\n  )\n}\n\nexport default withGrid(Writings, {\n  id: 'writings',\n  title: 'Writings',\n  seeAll: 'writings'\n})","import React from \"react\"\n\nimport Layout from \"../templates/page\"\n\nimport Hero from '../components/hero'\nimport About from '../components/about'\nimport Talks from \"../components/talks\"\nimport Projects from \"../components/projects\"\nimport Writings from \"../components/writings\"\n\nconst IndexPage = () => {\n\n  return (\n    <Layout>\n      <Hero />\n      <About />\n      <Talks />\n      <Projects />\n      <Writings />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","import React from 'react'\n\nexport const LogoIcon = ({ width, height }) => {\n  return (\n    <React.Fragment>\n      <svg\n        width={width}\n        height={height}\n        viewBox=\"0 0 53 53\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <rect width=\"52.9851\" height=\"52.9851\" rx=\"10\" fill=\"white\" />\n        <rect x=\"1\" y=\"1\" width=\"50\" height=\"50\" rx=\"10\" fill=\"black\" />\n\n        <path\n          d=\"M24.6914 19.7852H19.4648V34H15.9492V19.7852H10.793V16.9375H24.6914V19.7852ZM30.2227 27.9883V34H26.707V16.9375H33.3633C34.6445 16.9375 35.7695 17.1719 36.7383 17.6406C37.7148 18.1094 38.4648 18.7773 38.9883 19.6445C39.5117 20.5039 39.7734 21.4844 39.7734 22.5859C39.7734 24.2578 39.1992 25.5781 38.0508 26.5469C36.9102 27.5078 35.3281 27.9883 33.3047 27.9883H30.2227ZM30.2227 25.1406H33.3633C34.293 25.1406 35 24.9219 35.4844 24.4844C35.9766 24.0469 36.2227 23.4219 36.2227 22.6094C36.2227 21.7734 35.9766 21.0977 35.4844 20.582C34.9922 20.0664 34.3125 19.8008 33.4453 19.7852H30.2227V25.1406Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </React.Fragment>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { LogoIcon } from \"./icons\"\n\nconst Header = () => {\n  return (\n    <React.Fragment>\n      <header className=\"header\">\n        <div className=\"container\">\n          <h1 className=\"logo\">\n            <Link to=\"/\">\n              <LogoIcon width={53} height={53} />\n            </Link>\n          </h1>\n\n          <menu className=\"menu\">\n            <ul className=\"menu-links\">\n              <Link activeClassName=\"js-active\" to=\"/about\">About me</Link>\n              <Link activeClassName=\"js-active\" to=\"/writings\">Blog</Link>\n            </ul>\n          </menu>\n        </div>\n      </header>\n    </React.Fragment>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Link } from \"gatsby\"\n\nconst Footer = () => {\n  return (\n    <React.Fragment>\n      <footer className=\"footer\">\n        <div className=\"container\">\n          <aside className=\"footer-menu\">\n            <ul>\n              <Link to=\"/about\">\n                <h4>About</h4>\n                <p>A little bit about me.</p>\n              </Link>\n\n              <Link to=\"/#talks\">\n                <h4>Talks</h4>\n                <p>Sharing knowledge.</p>\n              </Link>\n\n              <Link to=\"/#projects\">\n                <h4>Projects</h4>\n                <p>Open-Source experiments.</p>\n              </Link>\n\n              <Link to=\"/writings\">\n                <h4>Blog</h4>\n                <p>Tech articles.</p>\n              </Link>\n\n              {/* <Link to=\"/hire\">\n                <h4>Hire</h4>\n                <p>Get in touch.</p>\n              </Link> */}\n            </ul>\n          </aside>\n\n          <aside className=\"copyright\">\n            <p>© 2012–Today / Copyright Thulio Philipe. All rights reserved.</p>\n          </aside>\n\n          <aside className=\"since\">\n            <small>\n              made with <span>♥</span> since{\" \"}\n              <a\n                href=\"https://web.archive.org/web/20130328062741/http://about.me/thulioph\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                2012\n              </a>\n            </small>\n          </aside>\n        </div>\n      </footer>\n    </React.Fragment>\n  )\n}\n\nexport default Footer","export const light = {\n\tcolors: {\n\t\tfonts: '#000000',\n\t\tbody: '#FFFFFF',\n\t\tlines: '#EAEAEA'\n\t}\n}\n\nexport const dark = {\n\tcolors: {\n\t\tfonts: '#FFFFFF',\n\t\tbody: '#000000',\n\t\tlines: '#EAEAEA'\n\t}\n}","import { createGlobalStyle } from 'styled-components'\n \nconst GlobalStyle = createGlobalStyle`\n  body {\n\t\tbackground-color: ${props => props.theme.colors.body};\n\t\ttransition: background .25s linear;\n  }\n`\n \nexport default GlobalStyle","import React, { useState, useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { ThemeProvider } from \"styled-components\"\n\nimport Header from '../components/header'\nimport Footer from '../components/footer'\nimport { SwitchTheme } from '../components/shared'\n\nimport \"../styles/index.scss\"\n\nimport {\n  light as lightTheme,\n  dark as darkTheme\n} from '../styles/theme'\n\nimport GlobalStyle from \"../styles/global\"\n\nconst Layout = ({ children, noHeader }) => {\n  const [currentTheme, setLight] = useState('light')\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('thulioph-theme')\n    if (savedTheme) setLight(savedTheme)\n  }, [setLight])\n\n  const changeTheme = () => {\n    const newTheme = currentTheme === 'light' ? 'dark' : 'light'\n\n    setLight(newTheme)\n    localStorage.setItem('thulioph-theme', newTheme)\n  }\n\n  const theme = currentTheme === 'light' ? lightTheme : darkTheme\n\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n\n        <SwitchTheme onClick={() => changeTheme()}>\n          change theme color\n        </SwitchTheme>\n\n        <div id=\"app\">\n          {!noHeader && <Header />}\n          <main className=\"content\">{children}</main>\n          <Footer />\n        </div>\n      </ThemeProvider>\n    </React.Fragment>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  noHeader: PropTypes.bool,\n}\n\nLayout.defaultProps = {\n  noHeader: false\n}\n\nexport default Layout\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}