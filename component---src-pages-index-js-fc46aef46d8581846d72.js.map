{"version":3,"sources":["webpack:///./src/hooks/use-site-metadata.js","webpack:///./src/components/hero.js","webpack:///./src/components/about.js","webpack:///./src/components/talks.js","webpack:///./src/hooks/use-talks.js","webpack:///./src/components/writings.js","webpack:///./src/pages/index.js","webpack:///./src/components/icons.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/templates/page.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js"],"names":["useSiteMetadata","site","siteMetadata","withGrid","Fragment","className","author","jobTitle","href","currentCompany","website","rel","target","label","id","image","title","bio","src","alt","dangerouslySetInnerHTML","__html","summary","talks","myDataNodes","when","length","map","link","pubDate","key","seeAll","data","writings","formatWritings","allMarkdownRemark","edges","IndexPage","LogoIcon","width","height","viewBox","fill","xmlns","rx","x","y","d","TwitterIcon","LinkedinIcon","GithubIcon","Header","twitter","github","linkedin","socialLinks","url","value","icon","to","Footer","Layout","children","noHeader","defaultProps","$export","fails","defined","quot","createHTML","string","tag","attribute","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","this"],"mappings":"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","file":"component---src-pages-index-js-fc46aef46d8581846d72.js","sourcesContent":["/**\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n*/\n\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SiteMetaData {\n        site {\n          siteMetadata {\n            name\n            jobTitle\n            location {\n              city\n              country\n              link\n            }\n            headline\n            currentCompany {\n              label\n              website\n            }\n            title\n            description\n            image\n            twitter\n            github\n            linkedin\n            extraSocial {\n              stackOverflow\n              codepen\n              codeSandBox\n              medium\n            }\n            bio {\n              summary\n              experience\n              toolbox\n              longTerm\n            }\n            experience {\n              title\n              period\n              website\n            }\n            education {\n              title\n              period\n              field\n              website\n            }\n          }\n        }\n      }\n    `\n  )\n\n  return site.siteMetadata\n}\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport withGrid from './withGrid'\n\nconst Hero = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            jobTitle\n            author\n            currentCompany {\n              label\n              website\n            }\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <React.Fragment>\n      <h2>\n        Hi, I'm {``}\n\n        <div className=\"crossed\">\n          <span>Thulio Philipe</span>, a.k.a\n        </div> {``}\n\n        <span>{site.siteMetadata.author}</span>.\n      </h2>\n\n      <h4>\n        {site.siteMetadata.jobTitle} at {``}\n\n        <span>\n          <a\n            href={site.siteMetadata.currentCompany.website}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {site.siteMetadata.currentCompany.label}\n          </a>\n        </span>\n      </h4>\n    </React.Fragment>\n  )\n}\n\nexport default withGrid(Hero, {\n  id: 'hero'\n})","import React from 'react'\n\nimport withGrid from './withGrid'\nimport { useSiteMetadata } from '../hooks/use-site-metadata'\n\nconst About = () => {\n  const { image, title, bio } = useSiteMetadata()\n\n  return (\n    <React.Fragment>\n      <figure>\n        <img src={image} alt={title} />\n      </figure>\n\n      <p dangerouslySetInnerHTML={{ __html: bio.summary }} />\n\n      <a href=\"/about\">more about me</a>\n    </React.Fragment>\n  )\n}\n\nexport default withGrid(About, {\n  id: 'about'\n})","import React from 'react'\n\nimport withGrid from './withGrid'\nimport Loading from './loading'\nimport Link from './link'\nimport { useTalks } from '../hooks/use-talks'\n\nconst Talks = () => {\n  const { talks } = useTalks()\n\n  return (\n    <React.Fragment>\n      <Loading when={!talks || !talks.length}>\n        <ul className=\"talks-list\">\n          {talks && talks.map(({ id, link, title, pubDate }) => (\n            <Link key={id} href={link} title={title} pubDate={pubDate} />\n          ))}\n        </ul>\n      </Loading>\n    </React.Fragment>\n  )\n}\n\nexport default withGrid(Talks, {\n  id: 'talks',\n  title: 'Talks',\n  seeAll: 'https://speakerdeck.com/thulioph'\n})","/**\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n * Template for start a new hook\n */\n\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nexport const useTalks = () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        myDataNodes {\n          talks {\n            id\n            link\n            pubDate\n            title\n          }\n        }\n      }\n    `\n  )\n\n  return data.myDataNodes\n}","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport withGrid from './withGrid'\nimport Loading from './loading'\nimport Link from './link'\nimport { formatWritings } from '../formatters'\n\nconst Writings = () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] },\n          limit: 3\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 250)\n              id\n              frontmatter {\n                title\n                date(formatString: \"ll\")\n                path\n                lang\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const writings = formatWritings(data.allMarkdownRemark.edges)\n\n  return (\n    <React.Fragment>\n      <Loading when={!writings || !writings.length}>\n        <ul className=\"writings-list\">\n          {writings && writings.map(({ id, link, title, pubDate }) => (\n            <Link key={id} href={link} title={title} pubDate={pubDate} />\n          ))}\n        </ul>\n      </Loading>\n    </React.Fragment>\n  )\n}\n\nexport default withGrid(Writings, {\n  id: 'writings',\n  title: 'Writings',\n  seeAll: 'writings'\n})","import React from \"react\"\n\nimport Layout from \"../templates/page\"\n\nimport Hero from '../components/hero'\nimport About from '../components/about'\nimport Talks from \"../components/talks\"\nimport Projects from \"../components/projects\"\nimport Writings from \"../components/writings\"\n\nconst IndexPage = () => {\n\n  return (\n    <Layout>\n      <Hero />\n      <About />\n      <Talks />\n      <Projects />\n      <Writings />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","import React from 'react'\n\nexport const LogoIcon = ({ width, height }) => {\n  return (\n    <React.Fragment>\n      <svg\n        width={width}\n        height={height}\n        viewBox=\"0 0 53 53\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <rect width=\"52.9851\" height=\"52.9851\" rx=\"10\" fill=\"white\" />\n        <rect x=\"1\" y=\"1\" width=\"50\" height=\"50\" rx=\"10\" fill=\"black\" />\n\n        <path\n          d=\"M24.6914 19.7852H19.4648V34H15.9492V19.7852H10.793V16.9375H24.6914V19.7852ZM30.2227 27.9883V34H26.707V16.9375H33.3633C34.6445 16.9375 35.7695 17.1719 36.7383 17.6406C37.7148 18.1094 38.4648 18.7773 38.9883 19.6445C39.5117 20.5039 39.7734 21.4844 39.7734 22.5859C39.7734 24.2578 39.1992 25.5781 38.0508 26.5469C36.9102 27.5078 35.3281 27.9883 33.3047 27.9883H30.2227ZM30.2227 25.1406H33.3633C34.293 25.1406 35 24.9219 35.4844 24.4844C35.9766 24.0469 36.2227 23.4219 36.2227 22.6094C36.2227 21.7734 35.9766 21.0977 35.4844 20.582C34.9922 20.0664 34.3125 19.8008 33.4453 19.7852H30.2227V25.1406Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </React.Fragment>\n  )\n}\n\nexport const TwitterIcon = ({ width, height }) => {\n  return (\n    <React.Fragment>\n      <svg\n        width={width}\n        height={height}\n        viewBox=\"0 0 30 30\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M27.1875 7.47341C26.291 7.86394 25.3154 8.145 24.3105 8.25447C25.3538 7.62854 26.1351 6.63968 26.5078 5.47341C25.5288 6.06154 24.4563 6.47395 23.3379 6.69234C22.8704 6.18769 22.3051 5.78566 21.6771 5.5113C21.049 5.23694 20.3718 5.09614 19.6875 5.09767C16.9189 5.09767 14.6924 7.36394 14.6924 10.145C14.6924 10.5355 14.7393 10.9261 14.8154 11.3018C10.6699 11.0829 6.97266 9.08287 4.51465 6.02074C4.06677 6.79328 3.83207 7.67289 3.83496 8.56808C3.83496 10.3196 4.7168 11.8639 6.06152 12.7722C5.26906 12.7407 4.49514 12.5207 3.80273 12.1302V12.1923C3.80273 14.645 5.51953 16.6775 7.80762 17.145C7.378 17.2577 6.93606 17.3153 6.49219 17.3166C6.16699 17.3166 5.85937 17.2841 5.54883 17.2397C6.18164 19.2397 8.02441 20.6923 10.2188 20.7397C8.50195 22.0977 6.35156 22.8965 4.0166 22.8965C3.59766 22.8965 3.21094 22.8817 2.80957 22.8343C5.02441 24.2693 7.65234 25.0977 10.4824 25.0977C19.6699 25.0977 24.6973 17.4113 24.6973 10.7397C24.6973 10.5207 24.6973 10.3018 24.6826 10.0829C25.6553 9.36394 26.5078 8.47341 27.1875 7.47341Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </React.Fragment>\n  )\n}\n\nexport const LinkedinIcon = ({ width, height }) => {\n  return (\n    <React.Fragment>\n      <svg\n        width={width}\n        height={height}\n        viewBox=\"0 0 30 30\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M22.4813 5H4.08125C3.63875 5 3.28125 5.3575 3.28125 5.8V24.2C3.28125 24.6425 3.63875 25 4.08125 25H22.4813C22.9237 25 23.2812 24.6425 23.2812 24.2V5.8C23.2812 5.3575 22.9237 5 22.4813 5ZM9.21375 22.0425H6.24625V12.4975H9.21375V22.0425ZM7.73125 11.1925C7.39107 11.1925 7.05852 11.0916 6.77567 10.9026C6.49282 10.7136 6.27236 10.445 6.14218 10.1307C6.01199 9.81643 5.97793 9.47059 6.0443 9.13694C6.11067 8.8033 6.27448 8.49682 6.51503 8.25628C6.75557 8.01573 7.06205 7.85192 7.39569 7.78555C7.72934 7.71918 8.07518 7.75324 8.38947 7.88343C8.70375 8.01361 8.97238 8.23407 9.16138 8.51692C9.35037 8.79977 9.45125 9.13232 9.45125 9.4725C9.44875 10.4225 8.67875 11.1925 7.73125 11.1925ZM20.3238 22.0425H17.3587V17.4C17.3587 16.2925 17.3388 14.87 15.8163 14.87C14.2738 14.87 14.0363 16.075 14.0363 17.32V22.0425H11.0738V12.4975H13.9187V13.8025H13.9587C14.3537 13.0525 15.3213 12.26 16.7663 12.26C19.7713 12.26 20.3238 14.2375 20.3238 16.8075V22.0425Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </React.Fragment>\n  )\n}\n\nexport const GithubIcon = ({ width, height }) => {\n  return (\n    <React.Fragment>\n      <svg\n        width={width}\n        height={height}\n        viewBox=\"0 0 30 30\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M11.8761 6.23535C6.35048 6.23306 1.875 10.828 1.875 16.4993C1.875 20.984 4.67469 24.7963 8.57369 26.1963C9.09877 26.3317 9.01834 25.9485 9.01834 25.6868V23.9081C5.98627 24.273 5.86338 22.2119 5.66005 21.8677C5.24892 21.147 4.27697 20.9634 4.56744 20.6191C5.25786 20.2542 5.96169 20.7109 6.77725 21.948C7.36712 22.8454 8.51783 22.6939 9.10101 22.5447C9.22837 22.0054 9.50096 21.5234 9.87634 21.1493C6.73479 20.5709 5.42544 18.6017 5.42544 16.2606C5.42544 15.1245 5.78965 14.0802 6.50465 13.2379C6.04884 11.8493 6.5471 10.6604 6.61414 10.4837C7.91231 10.3643 9.26188 11.4385 9.3669 11.5234C10.1042 11.3191 10.9466 11.2113 11.8895 11.2113C12.8369 11.2113 13.6815 11.3237 14.4256 11.5303C14.678 11.3329 15.9293 10.4102 17.1359 10.5227C17.2007 10.6994 17.6878 11.8608 17.2588 13.231C17.9827 14.0756 18.3514 15.1291 18.3514 16.2675C18.3514 18.6131 17.0331 20.5847 13.8826 21.1539C14.1524 21.4265 14.3667 21.7516 14.5129 22.1102C14.659 22.4688 14.7342 22.8537 14.7339 23.2425V25.8245C14.7518 26.0311 14.7339 26.2354 15.0691 26.2354C19.0262 24.8651 21.875 21.0253 21.875 16.5016C21.875 10.828 17.3973 6.23535 11.8761 6.23535Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </React.Fragment>\n  )\n}\n\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { useSiteMetadata } from '../hooks/use-site-metadata'\n\nimport { LogoIcon, TwitterIcon, LinkedinIcon, GithubIcon } from \"./icons\"\n\nconst Header = () => {\n  const { twitter, github, linkedin } = useSiteMetadata()\n\n  const menuLinks = [\n    { url: '/about', value: 'About' },\n    { url: '/#talks', value: 'Talks' },\n    { url: '/#projects', value: 'Projects' },\n    { url: '/writings', value: 'Writings' },\n  ]\n\n  const socialLinks = [\n    {\n      url: `https://twitter.com/${twitter}`,\n      value: \"Twitter\",\n      icon: <TwitterIcon width={30} height={30} />,\n    },\n    {\n      url: `https://linkedin.com/in/${linkedin}`,\n      value: \"LinkedIn\",\n      icon: <LinkedinIcon width={30} height={30} />,\n    },\n    {\n      url: `https://github.com/${github}`,\n      value: \"Github\",\n      icon: <GithubIcon width={30} height={30} />,\n    },\n  ]\n\n  return (\n    <React.Fragment>\n      <header className=\"header\">\n        <div className=\"container\">\n          <h1 className=\"logo\">\n            <Link to=\"/\">\n              <LogoIcon width={53} height={53} />\n            </Link>\n          </h1>\n\n          <menu className=\"menu\">\n            <ul className=\"menu-links\">\n              {menuLinks.map(link => (\n                <li key={link.value}>\n                  <a href={link.url} title={link.value}>\n                    {link.value}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </menu>\n\n          <ul className=\"social-links\">\n            {socialLinks.map(link => (\n              <li key={link.value}>\n                <a\n                  href={link.url}\n                  title={link.value}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  {link.icon}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </header>\n    </React.Fragment>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <React.Fragment>\n      <footer className=\"footer\">\n        <small>\n          made with <span>♥</span> since{\" \"}\n          <a\n            href=\"https://web.archive.org/web/20130328062741/http://about.me/thulioph\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            2012\n          </a>\n        </small>\n      </footer>\n    </React.Fragment>\n  )\n}\n\nexport default Footer","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from '../components/header'\nimport Footer from '../components/footer'\n\nimport \"../styles/index.scss\"\n\nconst Layout = ({ children, noHeader }) => {\n  return (\n    <React.Fragment>\n      <div id=\"app\">\n        {!noHeader && <Header />}\n        <main className=\"content\">{children}</main>\n        <Footer />\n      </div>\n    </React.Fragment>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  noHeader: PropTypes.bool,\n}\n\nLayout.defaultProps = {\n  noHeader: false\n}\n\nexport default Layout\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}